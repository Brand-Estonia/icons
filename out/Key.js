function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from "react";
import { forwardRef } from "react";
const Key = (props, ref) => /*#__PURE__*/React.createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg",
  ref: ref
}, props), /*#__PURE__*/React.createElement("path", {
  d: "M4.58825 21.4957C5.094 21.7176 5.68387 21.4875 5.90576 20.9818C6.12765 20.476 5.89754 19.8861 5.39179 19.6643L4.58825 21.4957ZM9.01002 11.42L8.60825 12.3357C8.93708 12.48 9.31802 12.4369 9.60629 12.2228L9.01002 11.42ZM19 4V3C18.7852 3 18.5762 3.06915 18.4038 3.19721L19 4ZM22 4H23C23 3.44772 22.5523 3 22 3V4ZM22 8L22.5585 8.82949C22.8345 8.64366 23 8.33272 23 8H22ZM20.5 9.01L20.1613 9.95089C20.4611 10.0588 20.7943 10.0174 21.0585 9.83949L20.5 9.01ZM18.25 8.2L18.5887 7.25911C18.3049 7.15692 17.99 7.18835 17.7319 7.34467C17.4739 7.50098 17.3002 7.76545 17.2593 8.06438L18.25 8.2ZM17.89 10.83L18.4667 11.647C18.6932 11.4871 18.8432 11.2403 18.8808 10.9656L17.89 10.83ZM16.53 11.79L16.2174 12.7399C16.5182 12.8389 16.848 12.7896 17.1067 12.607L16.53 11.79ZM14.16 11.01L14.4726 10.0601C14.1898 9.96703 13.8801 10.0048 13.628 10.1633C13.3758 10.3217 13.2074 10.5843 13.1686 10.8795L14.16 11.01ZM13.81 13.67L14.4052 14.4736C14.6231 14.3122 14.7661 14.0693 14.8015 13.8005L13.81 13.67ZM11.92 15.07L11.3248 14.2664C11.0171 14.4944 10.8666 14.8779 10.9371 15.2543L11.92 15.07ZM11.59 18.02L12.5055 18.4224L12.5077 18.4173L11.59 18.02ZM7.74233 19.9478C7.19986 20.0514 6.84414 20.5752 6.94779 21.1177C7.05145 21.6602 7.57524 22.0159 8.11771 21.9122L7.74233 19.9478ZM6.00002 16C5.44774 16 5.00002 16.4477 5.00002 17C5.00002 17.5523 5.44774 18 6.00002 18V16ZM6.01 18C6.56228 18 7.01 17.5523 7.01 17C7.01 16.4477 6.56228 16 6.01 16V18ZM5.39179 19.6643C3.3678 18.7763 2.44754 16.4163 3.33576 14.3918L1.50428 13.5882C0.172503 16.6237 1.55224 20.1637 4.58825 21.4957L5.39179 19.6643ZM3.33576 14.3918C4.22376 12.3678 6.58374 11.4475 8.60825 12.3357L9.41179 10.5043C6.3763 9.17248 2.83628 10.5522 1.50428 13.5882L3.33576 14.3918ZM9.60629 12.2228L19.5963 4.80279L18.4038 3.19721L8.41376 10.6172L9.60629 12.2228ZM19 5H22V3H19V5ZM21 4V8H23V4H21ZM21.4415 7.17051L19.9415 8.18051L21.0585 9.83949L22.5585 8.82949L21.4415 7.17051ZM20.8387 8.06911L18.5887 7.25911L17.9113 9.14089L20.1613 9.95089L20.8387 8.06911ZM17.2593 8.06438L16.8993 10.6944L18.8808 10.9656L19.2408 8.33562L17.2593 8.06438ZM17.3133 10.013L15.9533 10.973L17.1067 12.607L18.4667 11.647L17.3133 10.013ZM16.8426 10.8401L14.4726 10.0601L13.8474 11.9599L16.2174 12.7399L16.8426 10.8401ZM13.1686 10.8795L12.8186 13.5395L14.8015 13.8005L15.1515 11.1405L13.1686 10.8795ZM13.2148 12.8664L11.3248 14.2664L12.5152 15.8736L14.4052 14.4736L13.2148 12.8664ZM10.9371 15.2543C11.082 16.0269 11.0097 16.8436 10.6724 17.6227L12.5077 18.4173C13.0104 17.2564 13.118 16.0331 12.9029 14.8857L10.9371 15.2543ZM10.6745 17.6177C10.1229 18.8728 9.00395 19.7067 7.74233 19.9478L8.11771 21.9122C9.9961 21.5533 11.6771 20.3072 12.5055 18.4223L10.6745 17.6177ZM6.00002 18H6.01V16H6.00002V18Z",
  fill: "currentColor"
}));
const ForwardRef = /*#__PURE__*/forwardRef(Key);
export default ForwardRef;